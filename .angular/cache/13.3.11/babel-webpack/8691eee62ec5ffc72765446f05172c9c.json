{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:8081';\n      this.isLoggedIn = new BehaviorSubject(false);\n    }\n\n    signup(name, contactNumber, email, password) {\n      const signupData = {\n        name,\n        contactNumber,\n        email,\n        password\n      };\n      return this.http.post(`${this.baseUrl}/user/signup`, signupData);\n    }\n\n    login(email, password) {\n      const loginData = {\n        email,\n        password\n      };\n      this.isLoggedIn.next(true);\n      return this.http.post(`${this.baseUrl}/user/login`, loginData);\n    }\n\n    logout() {\n      localStorage.removeItem('userId');\n      localStorage.removeItem('phone');\n      localStorage.removeItem('username');\n      localStorage.removeItem('email');\n      localStorage.removeItem('points'); //localStorage.removeItem('userId'); \n    }\n\n    getRewards() {\n      return this.http.get(`${this.baseUrl}/reward`);\n    }\n\n    isLoggedIn$() {\n      return this.isLoggedIn.asObservable();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}
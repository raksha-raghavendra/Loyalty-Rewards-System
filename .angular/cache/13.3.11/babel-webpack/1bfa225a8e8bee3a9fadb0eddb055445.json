{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/progress-spinner\";\n\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"mat-spinner\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(userService, snackBar, router) {\n      this.userService = userService;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.loginData = {\n        email: '',\n        password: ''\n      };\n      this.loading = false;\n    }\n\n    onSubmit() {\n      this.loading = true;\n      this.userService.login(this.loginData).subscribe(response => {\n        this.loading = false;\n        this.snackBar.open('Login successful', 'Close', {\n          duration: 3000\n        });\n        this.router.navigate(['/dashboard']); // Adjust this to your actual route\n      }, error => {\n        this.loading = false;\n        this.snackBar.open('Invalid email or password', 'Close', {\n          duration: 3000\n        });\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"class\", \"spinner-container\", 4, \"ngIf\"], [1, \"spinner-container\"], [\"diameter\", \"30\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"mat-form-field\")(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.loginData.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.loginData.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 3);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginData.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardTitle, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i8.MatButton, i9.NgIf, i10.MatProgressSpinner],\n    styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:70vh}mat-card[_ngcontent-%COMP%]{padding:20px;max-width:400px;width:100%}mat-form-field[_ngcontent-%COMP%]{width:100%}button[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-items:center}mat-spinner[_ngcontent-%COMP%]{margin-right:10px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}